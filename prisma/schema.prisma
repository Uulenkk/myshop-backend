generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  name          String
  email         String         @unique
  phone         String?
  password      String
  isAdmin       Boolean        @default(false)
  username      String?         @unique
  
  orders        Order[]
  cartItems     CartItem[]     // CartItem холбоос нэмсэн
  wishlistItems WishlistItem[] // WishlistItem холбоос нэмсэн
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Product {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category    String
  
  type        ProductType?
  gender      String?
  material    String?
  images      String[]
  colors      String[] 
  sizes       ProductSize[]   @relation("ProductSizes")
  orderItems  OrderProduct[]
  cartItems   CartItem[]      // CartItem холбоос нэмсэн
  wishlistItems WishlistItem[] // WishlistItem холбоос нэмсэн
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model CartItem {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int     @default(1)
  color     String
  size      String

  @@unique([userId, productId])
}

model WishlistItem {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int

  @@unique([userId, productId])
}


model ProductSize {
  id           Int      @id @default(autoincrement())
  sizeLabel    String
  measurements Json
  productId    Int
  product      Product  @relation("ProductSizes", fields: [productId], references: [id])
}

enum UserRole {
  USER
  ADMIN
}

enum OrderStatus {
  Pending
  Paid
  Shipped
  Delivered
  Cancelled
}

enum ProductType {
  Ready      
  Preorder   
  Brand      
}

model Order {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  orderItems  OrderProduct[]
  status      OrderStatus  @default(Pending)
  name        String?   // ← энэ 3 байх ёстой
  phone       String?
  address     String?
  aimag       String?       // ✅ Нэмсэн
  district    String?       // ✅ Нэмсэн
  totalPrice  Float
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
  color     String?
  size     String?
}

